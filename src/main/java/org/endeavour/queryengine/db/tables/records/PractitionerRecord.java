/*
 * This file is generated by jOOQ.
 */
package org.endeavour.queryengine.db.tables.records;


import javax.annotation.Generated;

import org.endeavour.queryengine.db.tables.Practitioner;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PractitionerRecord extends UpdatableRecordImpl<PractitionerRecord> implements Record5<Long, Long, String, String, String> {

    private static final long serialVersionUID = 544287392;

    /**
     * Setter for <code>subscriber_pi.practitioner.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>subscriber_pi.practitioner.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>subscriber_pi.practitioner.organization_id</code>.
     */
    public void setOrganizationId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>subscriber_pi.practitioner.organization_id</code>.
     */
    public Long getOrganizationId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>subscriber_pi.practitioner.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>subscriber_pi.practitioner.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>subscriber_pi.practitioner.role_code</code>.
     */
    public void setRoleCode(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>subscriber_pi.practitioner.role_code</code>.
     */
    public String getRoleCode() {
        return (String) get(3);
    }

    /**
     * Setter for <code>subscriber_pi.practitioner.role_desc</code>.
     */
    public void setRoleDesc(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>subscriber_pi.practitioner.role_desc</code>.
     */
    public String getRoleDesc() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Long, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Practitioner.PRACTITIONER.ID;
    }

    @Override
    public Field<Long> field2() {
        return Practitioner.PRACTITIONER.ORGANIZATION_ID;
    }

    @Override
    public Field<String> field3() {
        return Practitioner.PRACTITIONER.NAME;
    }

    @Override
    public Field<String> field4() {
        return Practitioner.PRACTITIONER.ROLE_CODE;
    }

    @Override
    public Field<String> field5() {
        return Practitioner.PRACTITIONER.ROLE_DESC;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getOrganizationId();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getRoleCode();
    }

    @Override
    public String component5() {
        return getRoleDesc();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getOrganizationId();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getRoleCode();
    }

    @Override
    public String value5() {
        return getRoleDesc();
    }

    @Override
    public PractitionerRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PractitionerRecord value2(Long value) {
        setOrganizationId(value);
        return this;
    }

    @Override
    public PractitionerRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public PractitionerRecord value4(String value) {
        setRoleCode(value);
        return this;
    }

    @Override
    public PractitionerRecord value5(String value) {
        setRoleDesc(value);
        return this;
    }

    @Override
    public PractitionerRecord values(Long value1, Long value2, String value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PractitionerRecord
     */
    public PractitionerRecord() {
        super(Practitioner.PRACTITIONER);
    }

    /**
     * Create a detached, initialised PractitionerRecord
     */
    public PractitionerRecord(Long id, Long organizationId, String name, String roleCode, String roleDesc) {
        super(Practitioner.PRACTITIONER);

        set(0, id);
        set(1, organizationId);
        set(2, name);
        set(3, roleCode);
        set(4, roleDesc);
    }
}
