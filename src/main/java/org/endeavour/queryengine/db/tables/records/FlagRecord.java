/*
 * This file is generated by jOOQ.
 */
package org.endeavour.queryengine.db.tables.records;


import java.sql.Date;

import javax.annotation.Generated;

import org.endeavour.queryengine.db.tables.Flag;
import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FlagRecord extends UpdatableRecordImpl<FlagRecord> implements Record8<Long, Long, Long, Long, Date, Integer, Byte, String> {

    private static final long serialVersionUID = -1744194853;

    /**
     * Setter for <code>subscriber_pi.flag.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>subscriber_pi.flag.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>subscriber_pi.flag.organization_id</code>.
     */
    public void setOrganizationId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>subscriber_pi.flag.organization_id</code>.
     */
    public Long getOrganizationId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>subscriber_pi.flag.patient_id</code>.
     */
    public void setPatientId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>subscriber_pi.flag.patient_id</code>.
     */
    public Long getPatientId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>subscriber_pi.flag.person_id</code>.
     */
    public void setPersonId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>subscriber_pi.flag.person_id</code>.
     */
    public Long getPersonId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>subscriber_pi.flag.effective_date</code>.
     */
    public void setEffectiveDate(Date value) {
        set(4, value);
    }

    /**
     * Getter for <code>subscriber_pi.flag.effective_date</code>.
     */
    public Date getEffectiveDate() {
        return (Date) get(4);
    }

    /**
     * Setter for <code>subscriber_pi.flag.date_precision_concept_id</code>.
     */
    public void setDatePrecisionConceptId(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>subscriber_pi.flag.date_precision_concept_id</code>.
     */
    public Integer getDatePrecisionConceptId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>subscriber_pi.flag.is_active</code>.
     */
    public void setIsActive(Byte value) {
        set(6, value);
    }

    /**
     * Getter for <code>subscriber_pi.flag.is_active</code>.
     */
    public Byte getIsActive() {
        return (Byte) get(6);
    }

    /**
     * Setter for <code>subscriber_pi.flag.flag_text</code>.
     */
    public void setFlagText(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>subscriber_pi.flag.flag_text</code>.
     */
    public String getFlagText() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record3<Long, Long, Long> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, Long, Long, Long, Date, Integer, Byte, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, Long, Long, Long, Date, Integer, Byte, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Flag.FLAG.ID;
    }

    @Override
    public Field<Long> field2() {
        return Flag.FLAG.ORGANIZATION_ID;
    }

    @Override
    public Field<Long> field3() {
        return Flag.FLAG.PATIENT_ID;
    }

    @Override
    public Field<Long> field4() {
        return Flag.FLAG.PERSON_ID;
    }

    @Override
    public Field<Date> field5() {
        return Flag.FLAG.EFFECTIVE_DATE;
    }

    @Override
    public Field<Integer> field6() {
        return Flag.FLAG.DATE_PRECISION_CONCEPT_ID;
    }

    @Override
    public Field<Byte> field7() {
        return Flag.FLAG.IS_ACTIVE;
    }

    @Override
    public Field<String> field8() {
        return Flag.FLAG.FLAG_TEXT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getOrganizationId();
    }

    @Override
    public Long component3() {
        return getPatientId();
    }

    @Override
    public Long component4() {
        return getPersonId();
    }

    @Override
    public Date component5() {
        return getEffectiveDate();
    }

    @Override
    public Integer component6() {
        return getDatePrecisionConceptId();
    }

    @Override
    public Byte component7() {
        return getIsActive();
    }

    @Override
    public String component8() {
        return getFlagText();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getOrganizationId();
    }

    @Override
    public Long value3() {
        return getPatientId();
    }

    @Override
    public Long value4() {
        return getPersonId();
    }

    @Override
    public Date value5() {
        return getEffectiveDate();
    }

    @Override
    public Integer value6() {
        return getDatePrecisionConceptId();
    }

    @Override
    public Byte value7() {
        return getIsActive();
    }

    @Override
    public String value8() {
        return getFlagText();
    }

    @Override
    public FlagRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public FlagRecord value2(Long value) {
        setOrganizationId(value);
        return this;
    }

    @Override
    public FlagRecord value3(Long value) {
        setPatientId(value);
        return this;
    }

    @Override
    public FlagRecord value4(Long value) {
        setPersonId(value);
        return this;
    }

    @Override
    public FlagRecord value5(Date value) {
        setEffectiveDate(value);
        return this;
    }

    @Override
    public FlagRecord value6(Integer value) {
        setDatePrecisionConceptId(value);
        return this;
    }

    @Override
    public FlagRecord value7(Byte value) {
        setIsActive(value);
        return this;
    }

    @Override
    public FlagRecord value8(String value) {
        setFlagText(value);
        return this;
    }

    @Override
    public FlagRecord values(Long value1, Long value2, Long value3, Long value4, Date value5, Integer value6, Byte value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FlagRecord
     */
    public FlagRecord() {
        super(Flag.FLAG);
    }

    /**
     * Create a detached, initialised FlagRecord
     */
    public FlagRecord(Long id, Long organizationId, Long patientId, Long personId, Date effectiveDate, Integer datePrecisionConceptId, Byte isActive, String flagText) {
        super(Flag.FLAG);

        set(0, id);
        set(1, organizationId);
        set(2, patientId);
        set(3, personId);
        set(4, effectiveDate);
        set(5, datePrecisionConceptId);
        set(6, isActive);
        set(7, flagText);
    }
}
