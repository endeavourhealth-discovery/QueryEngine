/*
 * This file is generated by jOOQ.
 */
package org.endeavour.queryengine.db.tables.records;


import javax.annotation.Generated;

import org.endeavour.queryengine.db.tables.TableCounts;
import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TableCountsRecord extends TableRecordImpl<TableCountsRecord> implements Record3<String, Long, Long> {

    private static final long serialVersionUID = -696037592;

    /**
     * Setter for <code>subscriber_pi.table_counts.sub_table_name</code>.
     */
    public void setSubTableName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>subscriber_pi.table_counts.sub_table_name</code>.
     */
    public String getSubTableName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>subscriber_pi.table_counts.original_count</code>.
     */
    public void setOriginalCount(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>subscriber_pi.table_counts.original_count</code>.
     */
    public Long getOriginalCount() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>subscriber_pi.table_counts.new_count</code>.
     */
    public void setNewCount(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>subscriber_pi.table_counts.new_count</code>.
     */
    public Long getNewCount() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, Long, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, Long, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return TableCounts.TABLE_COUNTS.SUB_TABLE_NAME;
    }

    @Override
    public Field<Long> field2() {
        return TableCounts.TABLE_COUNTS.ORIGINAL_COUNT;
    }

    @Override
    public Field<Long> field3() {
        return TableCounts.TABLE_COUNTS.NEW_COUNT;
    }

    @Override
    public String component1() {
        return getSubTableName();
    }

    @Override
    public Long component2() {
        return getOriginalCount();
    }

    @Override
    public Long component3() {
        return getNewCount();
    }

    @Override
    public String value1() {
        return getSubTableName();
    }

    @Override
    public Long value2() {
        return getOriginalCount();
    }

    @Override
    public Long value3() {
        return getNewCount();
    }

    @Override
    public TableCountsRecord value1(String value) {
        setSubTableName(value);
        return this;
    }

    @Override
    public TableCountsRecord value2(Long value) {
        setOriginalCount(value);
        return this;
    }

    @Override
    public TableCountsRecord value3(Long value) {
        setNewCount(value);
        return this;
    }

    @Override
    public TableCountsRecord values(String value1, Long value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TableCountsRecord
     */
    public TableCountsRecord() {
        super(TableCounts.TABLE_COUNTS);
    }

    /**
     * Create a detached, initialised TableCountsRecord
     */
    public TableCountsRecord(String subTableName, Long originalCount, Long newCount) {
        super(TableCounts.TABLE_COUNTS);

        set(0, subTableName);
        set(1, originalCount);
        set(2, newCount);
    }
}
