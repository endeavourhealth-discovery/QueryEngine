/*
 * This file is generated by jOOQ.
 */
package org.endeavour.queryengine.db.tables.records;


import java.math.BigDecimal;
import java.sql.Date;

import javax.annotation.Generated;

import org.endeavour.queryengine.db.tables.Observation;
import org.jooq.Record3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ObservationRecord extends UpdatableRecordImpl<ObservationRecord> {

    private static final long serialVersionUID = -1283269595;

    /**
     * Setter for <code>subscriber_pi.observation.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>subscriber_pi.observation.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>subscriber_pi.observation.organization_id</code>.
     */
    public void setOrganizationId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>subscriber_pi.observation.organization_id</code>.
     */
    public Long getOrganizationId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>subscriber_pi.observation.patient_id</code>.
     */
    public void setPatientId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>subscriber_pi.observation.patient_id</code>.
     */
    public Long getPatientId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>subscriber_pi.observation.person_id</code>.
     */
    public void setPersonId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>subscriber_pi.observation.person_id</code>.
     */
    public Long getPersonId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>subscriber_pi.observation.encounter_id</code>.
     */
    public void setEncounterId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>subscriber_pi.observation.encounter_id</code>.
     */
    public Long getEncounterId() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>subscriber_pi.observation.practitioner_id</code>.
     */
    public void setPractitionerId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>subscriber_pi.observation.practitioner_id</code>.
     */
    public Long getPractitionerId() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>subscriber_pi.observation.clinical_effective_date</code>.
     */
    public void setClinicalEffectiveDate(Date value) {
        set(6, value);
    }

    /**
     * Getter for <code>subscriber_pi.observation.clinical_effective_date</code>.
     */
    public Date getClinicalEffectiveDate() {
        return (Date) get(6);
    }

    /**
     * Setter for <code>subscriber_pi.observation.date_precision_concept_id</code>.
     */
    public void setDatePrecisionConceptId(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>subscriber_pi.observation.date_precision_concept_id</code>.
     */
    public Integer getDatePrecisionConceptId() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>subscriber_pi.observation.result_value</code>.
     */
    public void setResultValue(Double value) {
        set(8, value);
    }

    /**
     * Getter for <code>subscriber_pi.observation.result_value</code>.
     */
    public Double getResultValue() {
        return (Double) get(8);
    }

    /**
     * Setter for <code>subscriber_pi.observation.result_value_units</code>.
     */
    public void setResultValueUnits(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>subscriber_pi.observation.result_value_units</code>.
     */
    public String getResultValueUnits() {
        return (String) get(9);
    }

    /**
     * Setter for <code>subscriber_pi.observation.result_date</code>.
     */
    public void setResultDate(Date value) {
        set(10, value);
    }

    /**
     * Getter for <code>subscriber_pi.observation.result_date</code>.
     */
    public Date getResultDate() {
        return (Date) get(10);
    }

    /**
     * Setter for <code>subscriber_pi.observation.result_text</code>.
     */
    public void setResultText(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>subscriber_pi.observation.result_text</code>.
     */
    public String getResultText() {
        return (String) get(11);
    }

    /**
     * Setter for <code>subscriber_pi.observation.result_concept_id</code>.
     */
    public void setResultConceptId(Integer value) {
        set(12, value);
    }

    /**
     * Getter for <code>subscriber_pi.observation.result_concept_id</code>.
     */
    public Integer getResultConceptId() {
        return (Integer) get(12);
    }

    /**
     * Setter for <code>subscriber_pi.observation.comparator_concept_id</code>.
     */
    public void setComparatorConceptId(Integer value) {
        set(13, value);
    }

    /**
     * Getter for <code>subscriber_pi.observation.comparator_concept_id</code>.
     */
    public Integer getComparatorConceptId() {
        return (Integer) get(13);
    }

    /**
     * Setter for <code>subscriber_pi.observation.is_problem</code>.
     */
    public void setIsProblem(Byte value) {
        set(14, value);
    }

    /**
     * Getter for <code>subscriber_pi.observation.is_problem</code>.
     */
    public Byte getIsProblem() {
        return (Byte) get(14);
    }

    /**
     * Setter for <code>subscriber_pi.observation.is_review</code>.
     */
    public void setIsReview(Byte value) {
        set(15, value);
    }

    /**
     * Getter for <code>subscriber_pi.observation.is_review</code>.
     */
    public Byte getIsReview() {
        return (Byte) get(15);
    }

    /**
     * Setter for <code>subscriber_pi.observation.problem_end_date</code>.
     */
    public void setProblemEndDate(Date value) {
        set(16, value);
    }

    /**
     * Getter for <code>subscriber_pi.observation.problem_end_date</code>.
     */
    public Date getProblemEndDate() {
        return (Date) get(16);
    }

    /**
     * Setter for <code>subscriber_pi.observation.parent_observation_id</code>.
     */
    public void setParentObservationId(Long value) {
        set(17, value);
    }

    /**
     * Getter for <code>subscriber_pi.observation.parent_observation_id</code>.
     */
    public Long getParentObservationId() {
        return (Long) get(17);
    }

    /**
     * Setter for <code>subscriber_pi.observation.core_concept_id</code>.
     */
    public void setCoreConceptId(Integer value) {
        set(18, value);
    }

    /**
     * Getter for <code>subscriber_pi.observation.core_concept_id</code>.
     */
    public Integer getCoreConceptId() {
        return (Integer) get(18);
    }

    /**
     * Setter for <code>subscriber_pi.observation.non_core_concept_id</code>.
     */
    public void setNonCoreConceptId(Integer value) {
        set(19, value);
    }

    /**
     * Getter for <code>subscriber_pi.observation.non_core_concept_id</code>.
     */
    public Integer getNonCoreConceptId() {
        return (Integer) get(19);
    }

    /**
     * Setter for <code>subscriber_pi.observation.age_at_event</code>.
     */
    public void setAgeAtEvent(BigDecimal value) {
        set(20, value);
    }

    /**
     * Getter for <code>subscriber_pi.observation.age_at_event</code>.
     */
    public BigDecimal getAgeAtEvent() {
        return (BigDecimal) get(20);
    }

    /**
     * Setter for <code>subscriber_pi.observation.episodicity_concept_id</code>.
     */
    public void setEpisodicityConceptId(Integer value) {
        set(21, value);
    }

    /**
     * Getter for <code>subscriber_pi.observation.episodicity_concept_id</code>.
     */
    public Integer getEpisodicityConceptId() {
        return (Integer) get(21);
    }

    /**
     * Setter for <code>subscriber_pi.observation.is_primary</code>.
     */
    public void setIsPrimary(Byte value) {
        set(22, value);
    }

    /**
     * Getter for <code>subscriber_pi.observation.is_primary</code>.
     */
    public Byte getIsPrimary() {
        return (Byte) get(22);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record3<Long, Long, Long> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ObservationRecord
     */
    public ObservationRecord() {
        super(Observation.OBSERVATION);
    }

    /**
     * Create a detached, initialised ObservationRecord
     */
    public ObservationRecord(Long id, Long organizationId, Long patientId, Long personId, Long encounterId, Long practitionerId, Date clinicalEffectiveDate, Integer datePrecisionConceptId, Double resultValue, String resultValueUnits, Date resultDate, String resultText, Integer resultConceptId, Integer comparatorConceptId, Byte isProblem, Byte isReview, Date problemEndDate, Long parentObservationId, Integer coreConceptId, Integer nonCoreConceptId, BigDecimal ageAtEvent, Integer episodicityConceptId, Byte isPrimary) {
        super(Observation.OBSERVATION);

        set(0, id);
        set(1, organizationId);
        set(2, patientId);
        set(3, personId);
        set(4, encounterId);
        set(5, practitionerId);
        set(6, clinicalEffectiveDate);
        set(7, datePrecisionConceptId);
        set(8, resultValue);
        set(9, resultValueUnits);
        set(10, resultDate);
        set(11, resultText);
        set(12, resultConceptId);
        set(13, comparatorConceptId);
        set(14, isProblem);
        set(15, isReview);
        set(16, problemEndDate);
        set(17, parentObservationId);
        set(18, coreConceptId);
        set(19, nonCoreConceptId);
        set(20, ageAtEvent);
        set(21, episodicityConceptId);
        set(22, isPrimary);
    }
}
