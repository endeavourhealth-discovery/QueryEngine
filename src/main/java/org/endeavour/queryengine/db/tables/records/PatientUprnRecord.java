/*
 * This file is generated by jOOQ.
 */
package org.endeavour.queryengine.db.tables.records;


import javax.annotation.Generated;

import org.endeavour.queryengine.db.tables.PatientUprn;
import org.jooq.Field;
import org.jooq.Record11;
import org.jooq.Record3;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PatientUprnRecord extends UpdatableRecordImpl<PatientUprnRecord> implements Record11<Long, Long, Long, Long, String, String, String, Byte, Byte, Byte, Byte> {

    private static final long serialVersionUID = -438965786;

    /**
     * Setter for <code>subscriber_pi.patient_uprn.patient_id</code>.
     */
    public void setPatientId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>subscriber_pi.patient_uprn.patient_id</code>.
     */
    public Long getPatientId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>subscriber_pi.patient_uprn.organization_id</code>.
     */
    public void setOrganizationId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>subscriber_pi.patient_uprn.organization_id</code>.
     */
    public Long getOrganizationId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>subscriber_pi.patient_uprn.person_id</code>.
     */
    public void setPersonId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>subscriber_pi.patient_uprn.person_id</code>.
     */
    public Long getPersonId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>subscriber_pi.patient_uprn.uprn</code>.
     */
    public void setUprn(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>subscriber_pi.patient_uprn.uprn</code>.
     */
    public Long getUprn() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>subscriber_pi.patient_uprn.qualifier</code>.
     */
    public void setQualifier(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>subscriber_pi.patient_uprn.qualifier</code>.
     */
    public String getQualifier() {
        return (String) get(4);
    }

    /**
     * Setter for <code>subscriber_pi.patient_uprn.algorithm</code>.
     */
    public void setAlgorithm(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>subscriber_pi.patient_uprn.algorithm</code>.
     */
    public String getAlgorithm() {
        return (String) get(5);
    }

    /**
     * Setter for <code>subscriber_pi.patient_uprn.match</code>.
     */
    public void setMatch(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>subscriber_pi.patient_uprn.match</code>.
     */
    public String getMatch() {
        return (String) get(6);
    }

    /**
     * Setter for <code>subscriber_pi.patient_uprn.no_address</code>.
     */
    public void setNoAddress(Byte value) {
        set(7, value);
    }

    /**
     * Getter for <code>subscriber_pi.patient_uprn.no_address</code>.
     */
    public Byte getNoAddress() {
        return (Byte) get(7);
    }

    /**
     * Setter for <code>subscriber_pi.patient_uprn.invalid_address</code>.
     */
    public void setInvalidAddress(Byte value) {
        set(8, value);
    }

    /**
     * Getter for <code>subscriber_pi.patient_uprn.invalid_address</code>.
     */
    public Byte getInvalidAddress() {
        return (Byte) get(8);
    }

    /**
     * Setter for <code>subscriber_pi.patient_uprn.missing_postcode</code>.
     */
    public void setMissingPostcode(Byte value) {
        set(9, value);
    }

    /**
     * Getter for <code>subscriber_pi.patient_uprn.missing_postcode</code>.
     */
    public Byte getMissingPostcode() {
        return (Byte) get(9);
    }

    /**
     * Setter for <code>subscriber_pi.patient_uprn.invalid_postcode</code>.
     */
    public void setInvalidPostcode(Byte value) {
        set(10, value);
    }

    /**
     * Getter for <code>subscriber_pi.patient_uprn.invalid_postcode</code>.
     */
    public Byte getInvalidPostcode() {
        return (Byte) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record3<Long, Long, Long> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Long, Long, Long, Long, String, String, String, Byte, Byte, Byte, Byte> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Long, Long, Long, Long, String, String, String, Byte, Byte, Byte, Byte> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return PatientUprn.PATIENT_UPRN.PATIENT_ID;
    }

    @Override
    public Field<Long> field2() {
        return PatientUprn.PATIENT_UPRN.ORGANIZATION_ID;
    }

    @Override
    public Field<Long> field3() {
        return PatientUprn.PATIENT_UPRN.PERSON_ID;
    }

    @Override
    public Field<Long> field4() {
        return PatientUprn.PATIENT_UPRN.UPRN;
    }

    @Override
    public Field<String> field5() {
        return PatientUprn.PATIENT_UPRN.QUALIFIER;
    }

    @Override
    public Field<String> field6() {
        return PatientUprn.PATIENT_UPRN.ALGORITHM;
    }

    @Override
    public Field<String> field7() {
        return PatientUprn.PATIENT_UPRN.MATCH;
    }

    @Override
    public Field<Byte> field8() {
        return PatientUprn.PATIENT_UPRN.NO_ADDRESS;
    }

    @Override
    public Field<Byte> field9() {
        return PatientUprn.PATIENT_UPRN.INVALID_ADDRESS;
    }

    @Override
    public Field<Byte> field10() {
        return PatientUprn.PATIENT_UPRN.MISSING_POSTCODE;
    }

    @Override
    public Field<Byte> field11() {
        return PatientUprn.PATIENT_UPRN.INVALID_POSTCODE;
    }

    @Override
    public Long component1() {
        return getPatientId();
    }

    @Override
    public Long component2() {
        return getOrganizationId();
    }

    @Override
    public Long component3() {
        return getPersonId();
    }

    @Override
    public Long component4() {
        return getUprn();
    }

    @Override
    public String component5() {
        return getQualifier();
    }

    @Override
    public String component6() {
        return getAlgorithm();
    }

    @Override
    public String component7() {
        return getMatch();
    }

    @Override
    public Byte component8() {
        return getNoAddress();
    }

    @Override
    public Byte component9() {
        return getInvalidAddress();
    }

    @Override
    public Byte component10() {
        return getMissingPostcode();
    }

    @Override
    public Byte component11() {
        return getInvalidPostcode();
    }

    @Override
    public Long value1() {
        return getPatientId();
    }

    @Override
    public Long value2() {
        return getOrganizationId();
    }

    @Override
    public Long value3() {
        return getPersonId();
    }

    @Override
    public Long value4() {
        return getUprn();
    }

    @Override
    public String value5() {
        return getQualifier();
    }

    @Override
    public String value6() {
        return getAlgorithm();
    }

    @Override
    public String value7() {
        return getMatch();
    }

    @Override
    public Byte value8() {
        return getNoAddress();
    }

    @Override
    public Byte value9() {
        return getInvalidAddress();
    }

    @Override
    public Byte value10() {
        return getMissingPostcode();
    }

    @Override
    public Byte value11() {
        return getInvalidPostcode();
    }

    @Override
    public PatientUprnRecord value1(Long value) {
        setPatientId(value);
        return this;
    }

    @Override
    public PatientUprnRecord value2(Long value) {
        setOrganizationId(value);
        return this;
    }

    @Override
    public PatientUprnRecord value3(Long value) {
        setPersonId(value);
        return this;
    }

    @Override
    public PatientUprnRecord value4(Long value) {
        setUprn(value);
        return this;
    }

    @Override
    public PatientUprnRecord value5(String value) {
        setQualifier(value);
        return this;
    }

    @Override
    public PatientUprnRecord value6(String value) {
        setAlgorithm(value);
        return this;
    }

    @Override
    public PatientUprnRecord value7(String value) {
        setMatch(value);
        return this;
    }

    @Override
    public PatientUprnRecord value8(Byte value) {
        setNoAddress(value);
        return this;
    }

    @Override
    public PatientUprnRecord value9(Byte value) {
        setInvalidAddress(value);
        return this;
    }

    @Override
    public PatientUprnRecord value10(Byte value) {
        setMissingPostcode(value);
        return this;
    }

    @Override
    public PatientUprnRecord value11(Byte value) {
        setInvalidPostcode(value);
        return this;
    }

    @Override
    public PatientUprnRecord values(Long value1, Long value2, Long value3, Long value4, String value5, String value6, String value7, Byte value8, Byte value9, Byte value10, Byte value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PatientUprnRecord
     */
    public PatientUprnRecord() {
        super(PatientUprn.PATIENT_UPRN);
    }

    /**
     * Create a detached, initialised PatientUprnRecord
     */
    public PatientUprnRecord(Long patientId, Long organizationId, Long personId, Long uprn, String qualifier, String algorithm, String match, Byte noAddress, Byte invalidAddress, Byte missingPostcode, Byte invalidPostcode) {
        super(PatientUprn.PATIENT_UPRN);

        set(0, patientId);
        set(1, organizationId);
        set(2, personId);
        set(3, uprn);
        set(4, qualifier);
        set(5, algorithm);
        set(6, match);
        set(7, noAddress);
        set(8, invalidAddress);
        set(9, missingPostcode);
        set(10, invalidPostcode);
    }
}
