/*
 * This file is generated by jOOQ.
 */
package org.endeavour.queryengine.db.tables.records;


import java.math.BigDecimal;
import java.sql.Date;

import javax.annotation.Generated;

import org.endeavour.queryengine.db.tables.AllergyIntolerance;
import org.jooq.Field;
import org.jooq.Record12;
import org.jooq.Record3;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AllergyIntoleranceRecord extends UpdatableRecordImpl<AllergyIntoleranceRecord> implements Record12<Long, Long, Long, Long, Long, Long, Date, Integer, Byte, Integer, Integer, BigDecimal> {

    private static final long serialVersionUID = -1766640164;

    /**
     * Setter for <code>subscriber_pi.allergy_intolerance.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>subscriber_pi.allergy_intolerance.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>subscriber_pi.allergy_intolerance.organization_id</code>.
     */
    public void setOrganizationId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>subscriber_pi.allergy_intolerance.organization_id</code>.
     */
    public Long getOrganizationId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>subscriber_pi.allergy_intolerance.patient_id</code>.
     */
    public void setPatientId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>subscriber_pi.allergy_intolerance.patient_id</code>.
     */
    public Long getPatientId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>subscriber_pi.allergy_intolerance.person_id</code>.
     */
    public void setPersonId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>subscriber_pi.allergy_intolerance.person_id</code>.
     */
    public Long getPersonId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>subscriber_pi.allergy_intolerance.encounter_id</code>.
     */
    public void setEncounterId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>subscriber_pi.allergy_intolerance.encounter_id</code>.
     */
    public Long getEncounterId() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>subscriber_pi.allergy_intolerance.practitioner_id</code>.
     */
    public void setPractitionerId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>subscriber_pi.allergy_intolerance.practitioner_id</code>.
     */
    public Long getPractitionerId() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>subscriber_pi.allergy_intolerance.clinical_effective_date</code>.
     */
    public void setClinicalEffectiveDate(Date value) {
        set(6, value);
    }

    /**
     * Getter for <code>subscriber_pi.allergy_intolerance.clinical_effective_date</code>.
     */
    public Date getClinicalEffectiveDate() {
        return (Date) get(6);
    }

    /**
     * Setter for <code>subscriber_pi.allergy_intolerance.date_precision_concept_id</code>.
     */
    public void setDatePrecisionConceptId(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>subscriber_pi.allergy_intolerance.date_precision_concept_id</code>.
     */
    public Integer getDatePrecisionConceptId() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>subscriber_pi.allergy_intolerance.is_review</code>.
     */
    public void setIsReview(Byte value) {
        set(8, value);
    }

    /**
     * Getter for <code>subscriber_pi.allergy_intolerance.is_review</code>.
     */
    public Byte getIsReview() {
        return (Byte) get(8);
    }

    /**
     * Setter for <code>subscriber_pi.allergy_intolerance.core_concept_id</code>.
     */
    public void setCoreConceptId(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>subscriber_pi.allergy_intolerance.core_concept_id</code>.
     */
    public Integer getCoreConceptId() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>subscriber_pi.allergy_intolerance.non_core_concept_id</code>.
     */
    public void setNonCoreConceptId(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>subscriber_pi.allergy_intolerance.non_core_concept_id</code>.
     */
    public Integer getNonCoreConceptId() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>subscriber_pi.allergy_intolerance.age_at_event</code>.
     */
    public void setAgeAtEvent(BigDecimal value) {
        set(11, value);
    }

    /**
     * Getter for <code>subscriber_pi.allergy_intolerance.age_at_event</code>.
     */
    public BigDecimal getAgeAtEvent() {
        return (BigDecimal) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record3<Long, Long, Long> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<Long, Long, Long, Long, Long, Long, Date, Integer, Byte, Integer, Integer, BigDecimal> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<Long, Long, Long, Long, Long, Long, Date, Integer, Byte, Integer, Integer, BigDecimal> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return AllergyIntolerance.ALLERGY_INTOLERANCE.ID;
    }

    @Override
    public Field<Long> field2() {
        return AllergyIntolerance.ALLERGY_INTOLERANCE.ORGANIZATION_ID;
    }

    @Override
    public Field<Long> field3() {
        return AllergyIntolerance.ALLERGY_INTOLERANCE.PATIENT_ID;
    }

    @Override
    public Field<Long> field4() {
        return AllergyIntolerance.ALLERGY_INTOLERANCE.PERSON_ID;
    }

    @Override
    public Field<Long> field5() {
        return AllergyIntolerance.ALLERGY_INTOLERANCE.ENCOUNTER_ID;
    }

    @Override
    public Field<Long> field6() {
        return AllergyIntolerance.ALLERGY_INTOLERANCE.PRACTITIONER_ID;
    }

    @Override
    public Field<Date> field7() {
        return AllergyIntolerance.ALLERGY_INTOLERANCE.CLINICAL_EFFECTIVE_DATE;
    }

    @Override
    public Field<Integer> field8() {
        return AllergyIntolerance.ALLERGY_INTOLERANCE.DATE_PRECISION_CONCEPT_ID;
    }

    @Override
    public Field<Byte> field9() {
        return AllergyIntolerance.ALLERGY_INTOLERANCE.IS_REVIEW;
    }

    @Override
    public Field<Integer> field10() {
        return AllergyIntolerance.ALLERGY_INTOLERANCE.CORE_CONCEPT_ID;
    }

    @Override
    public Field<Integer> field11() {
        return AllergyIntolerance.ALLERGY_INTOLERANCE.NON_CORE_CONCEPT_ID;
    }

    @Override
    public Field<BigDecimal> field12() {
        return AllergyIntolerance.ALLERGY_INTOLERANCE.AGE_AT_EVENT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getOrganizationId();
    }

    @Override
    public Long component3() {
        return getPatientId();
    }

    @Override
    public Long component4() {
        return getPersonId();
    }

    @Override
    public Long component5() {
        return getEncounterId();
    }

    @Override
    public Long component6() {
        return getPractitionerId();
    }

    @Override
    public Date component7() {
        return getClinicalEffectiveDate();
    }

    @Override
    public Integer component8() {
        return getDatePrecisionConceptId();
    }

    @Override
    public Byte component9() {
        return getIsReview();
    }

    @Override
    public Integer component10() {
        return getCoreConceptId();
    }

    @Override
    public Integer component11() {
        return getNonCoreConceptId();
    }

    @Override
    public BigDecimal component12() {
        return getAgeAtEvent();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getOrganizationId();
    }

    @Override
    public Long value3() {
        return getPatientId();
    }

    @Override
    public Long value4() {
        return getPersonId();
    }

    @Override
    public Long value5() {
        return getEncounterId();
    }

    @Override
    public Long value6() {
        return getPractitionerId();
    }

    @Override
    public Date value7() {
        return getClinicalEffectiveDate();
    }

    @Override
    public Integer value8() {
        return getDatePrecisionConceptId();
    }

    @Override
    public Byte value9() {
        return getIsReview();
    }

    @Override
    public Integer value10() {
        return getCoreConceptId();
    }

    @Override
    public Integer value11() {
        return getNonCoreConceptId();
    }

    @Override
    public BigDecimal value12() {
        return getAgeAtEvent();
    }

    @Override
    public AllergyIntoleranceRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AllergyIntoleranceRecord value2(Long value) {
        setOrganizationId(value);
        return this;
    }

    @Override
    public AllergyIntoleranceRecord value3(Long value) {
        setPatientId(value);
        return this;
    }

    @Override
    public AllergyIntoleranceRecord value4(Long value) {
        setPersonId(value);
        return this;
    }

    @Override
    public AllergyIntoleranceRecord value5(Long value) {
        setEncounterId(value);
        return this;
    }

    @Override
    public AllergyIntoleranceRecord value6(Long value) {
        setPractitionerId(value);
        return this;
    }

    @Override
    public AllergyIntoleranceRecord value7(Date value) {
        setClinicalEffectiveDate(value);
        return this;
    }

    @Override
    public AllergyIntoleranceRecord value8(Integer value) {
        setDatePrecisionConceptId(value);
        return this;
    }

    @Override
    public AllergyIntoleranceRecord value9(Byte value) {
        setIsReview(value);
        return this;
    }

    @Override
    public AllergyIntoleranceRecord value10(Integer value) {
        setCoreConceptId(value);
        return this;
    }

    @Override
    public AllergyIntoleranceRecord value11(Integer value) {
        setNonCoreConceptId(value);
        return this;
    }

    @Override
    public AllergyIntoleranceRecord value12(BigDecimal value) {
        setAgeAtEvent(value);
        return this;
    }

    @Override
    public AllergyIntoleranceRecord values(Long value1, Long value2, Long value3, Long value4, Long value5, Long value6, Date value7, Integer value8, Byte value9, Integer value10, Integer value11, BigDecimal value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AllergyIntoleranceRecord
     */
    public AllergyIntoleranceRecord() {
        super(AllergyIntolerance.ALLERGY_INTOLERANCE);
    }

    /**
     * Create a detached, initialised AllergyIntoleranceRecord
     */
    public AllergyIntoleranceRecord(Long id, Long organizationId, Long patientId, Long personId, Long encounterId, Long practitionerId, Date clinicalEffectiveDate, Integer datePrecisionConceptId, Byte isReview, Integer coreConceptId, Integer nonCoreConceptId, BigDecimal ageAtEvent) {
        super(AllergyIntolerance.ALLERGY_INTOLERANCE);

        set(0, id);
        set(1, organizationId);
        set(2, patientId);
        set(3, personId);
        set(4, encounterId);
        set(5, practitionerId);
        set(6, clinicalEffectiveDate);
        set(7, datePrecisionConceptId);
        set(8, isReview);
        set(9, coreConceptId);
        set(10, nonCoreConceptId);
        set(11, ageAtEvent);
    }
}
