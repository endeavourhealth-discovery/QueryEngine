/*
 * This file is generated by jOOQ.
 */
package org.endeavour.queryengine.db;


import javax.annotation.Generated;

import org.endeavour.queryengine.db.tables.AllergyIntolerance;
import org.endeavour.queryengine.db.tables.Appointment;
import org.endeavour.queryengine.db.tables.Concept;
import org.endeavour.queryengine.db.tables.ConceptMap;
import org.endeavour.queryengine.db.tables.DiagnosticOrder;
import org.endeavour.queryengine.db.tables.Encounter;
import org.endeavour.queryengine.db.tables.EpisodeOfCare;
import org.endeavour.queryengine.db.tables.Flag;
import org.endeavour.queryengine.db.tables.Location;
import org.endeavour.queryengine.db.tables.MedicationOrder;
import org.endeavour.queryengine.db.tables.MedicationStatement;
import org.endeavour.queryengine.db.tables.Observation;
import org.endeavour.queryengine.db.tables.Organization;
import org.endeavour.queryengine.db.tables.Patient;
import org.endeavour.queryengine.db.tables.PatientAddress;
import org.endeavour.queryengine.db.tables.PatientContact;
import org.endeavour.queryengine.db.tables.PatientUprn;
import org.endeavour.queryengine.db.tables.Person;
import org.endeavour.queryengine.db.tables.Practitioner;
import org.endeavour.queryengine.db.tables.ProcedureRequest;
import org.endeavour.queryengine.db.tables.PseudoId;
import org.endeavour.queryengine.db.tables.ReferralRequest;
import org.endeavour.queryengine.db.tables.Schedule;
import org.endeavour.queryengine.db.tables.records.AllergyIntoleranceRecord;
import org.endeavour.queryengine.db.tables.records.AppointmentRecord;
import org.endeavour.queryengine.db.tables.records.ConceptMapRecord;
import org.endeavour.queryengine.db.tables.records.ConceptRecord;
import org.endeavour.queryengine.db.tables.records.DiagnosticOrderRecord;
import org.endeavour.queryengine.db.tables.records.EncounterRecord;
import org.endeavour.queryengine.db.tables.records.EpisodeOfCareRecord;
import org.endeavour.queryengine.db.tables.records.FlagRecord;
import org.endeavour.queryengine.db.tables.records.LocationRecord;
import org.endeavour.queryengine.db.tables.records.MedicationOrderRecord;
import org.endeavour.queryengine.db.tables.records.MedicationStatementRecord;
import org.endeavour.queryengine.db.tables.records.ObservationRecord;
import org.endeavour.queryengine.db.tables.records.OrganizationRecord;
import org.endeavour.queryengine.db.tables.records.PatientAddressRecord;
import org.endeavour.queryengine.db.tables.records.PatientContactRecord;
import org.endeavour.queryengine.db.tables.records.PatientRecord;
import org.endeavour.queryengine.db.tables.records.PatientUprnRecord;
import org.endeavour.queryengine.db.tables.records.PersonRecord;
import org.endeavour.queryengine.db.tables.records.PractitionerRecord;
import org.endeavour.queryengine.db.tables.records.ProcedureRequestRecord;
import org.endeavour.queryengine.db.tables.records.PseudoIdRecord;
import org.endeavour.queryengine.db.tables.records.ReferralRequestRecord;
import org.endeavour.queryengine.db.tables.records.ScheduleRecord;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>subscriber_pi</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<ConceptRecord, Integer> IDENTITY_CONCEPT = Identities0.IDENTITY_CONCEPT;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AllergyIntoleranceRecord> KEY_ALLERGY_INTOLERANCE_PRIMARY = UniqueKeys0.KEY_ALLERGY_INTOLERANCE_PRIMARY;
    public static final UniqueKey<AllergyIntoleranceRecord> KEY_ALLERGY_INTOLERANCE_ALLERGY_INTOLERANCE_ID = UniqueKeys0.KEY_ALLERGY_INTOLERANCE_ALLERGY_INTOLERANCE_ID;
    public static final UniqueKey<AppointmentRecord> KEY_APPOINTMENT_PRIMARY = UniqueKeys0.KEY_APPOINTMENT_PRIMARY;
    public static final UniqueKey<AppointmentRecord> KEY_APPOINTMENT_APPOINTMENT_ID = UniqueKeys0.KEY_APPOINTMENT_APPOINTMENT_ID;
    public static final UniqueKey<ConceptRecord> KEY_CONCEPT_PRIMARY = UniqueKeys0.KEY_CONCEPT_PRIMARY;
    public static final UniqueKey<ConceptRecord> KEY_CONCEPT_CONCEPT_ID_UQ = UniqueKeys0.KEY_CONCEPT_CONCEPT_ID_UQ;
    public static final UniqueKey<ConceptRecord> KEY_CONCEPT_CONCEPT_SCHEME_CODE_IDX = UniqueKeys0.KEY_CONCEPT_CONCEPT_SCHEME_CODE_IDX;
    public static final UniqueKey<ConceptMapRecord> KEY_CONCEPT_MAP_PRIMARY = UniqueKeys0.KEY_CONCEPT_MAP_PRIMARY;
    public static final UniqueKey<DiagnosticOrderRecord> KEY_DIAGNOSTIC_ORDER_PRIMARY = UniqueKeys0.KEY_DIAGNOSTIC_ORDER_PRIMARY;
    public static final UniqueKey<DiagnosticOrderRecord> KEY_DIAGNOSTIC_ORDER_DIAGNOSTIC_ORDER_ID = UniqueKeys0.KEY_DIAGNOSTIC_ORDER_DIAGNOSTIC_ORDER_ID;
    public static final UniqueKey<EncounterRecord> KEY_ENCOUNTER_PRIMARY = UniqueKeys0.KEY_ENCOUNTER_PRIMARY;
    public static final UniqueKey<EncounterRecord> KEY_ENCOUNTER_ENCOUNTER_ID = UniqueKeys0.KEY_ENCOUNTER_ENCOUNTER_ID;
    public static final UniqueKey<EpisodeOfCareRecord> KEY_EPISODE_OF_CARE_PRIMARY = UniqueKeys0.KEY_EPISODE_OF_CARE_PRIMARY;
    public static final UniqueKey<EpisodeOfCareRecord> KEY_EPISODE_OF_CARE_EPISODE_OF_CARE_ID = UniqueKeys0.KEY_EPISODE_OF_CARE_EPISODE_OF_CARE_ID;
    public static final UniqueKey<FlagRecord> KEY_FLAG_PRIMARY = UniqueKeys0.KEY_FLAG_PRIMARY;
    public static final UniqueKey<FlagRecord> KEY_FLAG_FLAG_ID = UniqueKeys0.KEY_FLAG_FLAG_ID;
    public static final UniqueKey<LocationRecord> KEY_LOCATION_PRIMARY = UniqueKeys0.KEY_LOCATION_PRIMARY;
    public static final UniqueKey<LocationRecord> KEY_LOCATION_LOCATION_ID = UniqueKeys0.KEY_LOCATION_LOCATION_ID;
    public static final UniqueKey<MedicationOrderRecord> KEY_MEDICATION_ORDER_PRIMARY = UniqueKeys0.KEY_MEDICATION_ORDER_PRIMARY;
    public static final UniqueKey<MedicationOrderRecord> KEY_MEDICATION_ORDER_MEDICATION_ORDER_ID = UniqueKeys0.KEY_MEDICATION_ORDER_MEDICATION_ORDER_ID;
    public static final UniqueKey<MedicationStatementRecord> KEY_MEDICATION_STATEMENT_PRIMARY = UniqueKeys0.KEY_MEDICATION_STATEMENT_PRIMARY;
    public static final UniqueKey<MedicationStatementRecord> KEY_MEDICATION_STATEMENT_MEDICATION_STATEMENT_ID = UniqueKeys0.KEY_MEDICATION_STATEMENT_MEDICATION_STATEMENT_ID;
    public static final UniqueKey<ObservationRecord> KEY_OBSERVATION_PRIMARY = UniqueKeys0.KEY_OBSERVATION_PRIMARY;
    public static final UniqueKey<ObservationRecord> KEY_OBSERVATION_OBSERVATION_ID = UniqueKeys0.KEY_OBSERVATION_OBSERVATION_ID;
    public static final UniqueKey<OrganizationRecord> KEY_ORGANIZATION_PRIMARY = UniqueKeys0.KEY_ORGANIZATION_PRIMARY;
    public static final UniqueKey<OrganizationRecord> KEY_ORGANIZATION_ORGANIZATION_ID = UniqueKeys0.KEY_ORGANIZATION_ORGANIZATION_ID;
    public static final UniqueKey<PatientRecord> KEY_PATIENT_PRIMARY = UniqueKeys0.KEY_PATIENT_PRIMARY;
    public static final UniqueKey<PatientRecord> KEY_PATIENT_PATIENT_ID = UniqueKeys0.KEY_PATIENT_PATIENT_ID;
    public static final UniqueKey<PatientAddressRecord> KEY_PATIENT_ADDRESS_PRIMARY = UniqueKeys0.KEY_PATIENT_ADDRESS_PRIMARY;
    public static final UniqueKey<PatientContactRecord> KEY_PATIENT_CONTACT_PRIMARY = UniqueKeys0.KEY_PATIENT_CONTACT_PRIMARY;
    public static final UniqueKey<PatientUprnRecord> KEY_PATIENT_UPRN_PRIMARY = UniqueKeys0.KEY_PATIENT_UPRN_PRIMARY;
    public static final UniqueKey<PatientUprnRecord> KEY_PATIENT_UPRN_PATIENT_UPRN_ID = UniqueKeys0.KEY_PATIENT_UPRN_PATIENT_UPRN_ID;
    public static final UniqueKey<PersonRecord> KEY_PERSON_PRIMARY = UniqueKeys0.KEY_PERSON_PRIMARY;
    public static final UniqueKey<PersonRecord> KEY_PERSON_PERSON_ID = UniqueKeys0.KEY_PERSON_PERSON_ID;
    public static final UniqueKey<PractitionerRecord> KEY_PRACTITIONER_PRIMARY = UniqueKeys0.KEY_PRACTITIONER_PRIMARY;
    public static final UniqueKey<PractitionerRecord> KEY_PRACTITIONER_PRACTITIONER_ID = UniqueKeys0.KEY_PRACTITIONER_PRACTITIONER_ID;
    public static final UniqueKey<ProcedureRequestRecord> KEY_PROCEDURE_REQUEST_PRIMARY = UniqueKeys0.KEY_PROCEDURE_REQUEST_PRIMARY;
    public static final UniqueKey<ProcedureRequestRecord> KEY_PROCEDURE_REQUEST_PROCEDURE_REQUEST_ID = UniqueKeys0.KEY_PROCEDURE_REQUEST_PROCEDURE_REQUEST_ID;
    public static final UniqueKey<PseudoIdRecord> KEY_PSEUDO_ID_PSEUDO_ID_ID = UniqueKeys0.KEY_PSEUDO_ID_PSEUDO_ID_ID;
    public static final UniqueKey<PseudoIdRecord> KEY_PSEUDO_ID_PRIMARY = UniqueKeys0.KEY_PSEUDO_ID_PRIMARY;
    public static final UniqueKey<ReferralRequestRecord> KEY_REFERRAL_REQUEST_PRIMARY = UniqueKeys0.KEY_REFERRAL_REQUEST_PRIMARY;
    public static final UniqueKey<ReferralRequestRecord> KEY_REFERRAL_REQUEST_REFERRAL_REQUEST_ID = UniqueKeys0.KEY_REFERRAL_REQUEST_REFERRAL_REQUEST_ID;
    public static final UniqueKey<ScheduleRecord> KEY_SCHEDULE_PRIMARY = UniqueKeys0.KEY_SCHEDULE_PRIMARY;
    public static final UniqueKey<ScheduleRecord> KEY_SCHEDULE_SCHEDULE_ID = UniqueKeys0.KEY_SCHEDULE_SCHEDULE_ID;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AllergyIntoleranceRecord, PatientRecord> FK_ALLERGY_INTOLERANCE_PATIENT_ID_ORGANIZATION_ID = ForeignKeys0.FK_ALLERGY_INTOLERANCE_PATIENT_ID_ORGANIZATION_ID;
    public static final ForeignKey<AllergyIntoleranceRecord, EncounterRecord> FK_ALLERGY_INTOLERANCE_ENCOUNTER_ID = ForeignKeys0.FK_ALLERGY_INTOLERANCE_ENCOUNTER_ID;
    public static final ForeignKey<AllergyIntoleranceRecord, PractitionerRecord> FK_ALLERGY_INTOLERANCE_PRACTITIONER_ID = ForeignKeys0.FK_ALLERGY_INTOLERANCE_PRACTITIONER_ID;
    public static final ForeignKey<AppointmentRecord, OrganizationRecord> FK_APPOINTMENT_ORGANIZATION_ID = ForeignKeys0.FK_APPOINTMENT_ORGANIZATION_ID;
    public static final ForeignKey<AppointmentRecord, PractitionerRecord> FK_APPOINTMENT_PRACTITIONER_ID = ForeignKeys0.FK_APPOINTMENT_PRACTITIONER_ID;
    public static final ForeignKey<DiagnosticOrderRecord, PatientRecord> FK_DIAGNOSTIC_ORDER_PATIENT_ID_ORGANIZATION_ID = ForeignKeys0.FK_DIAGNOSTIC_ORDER_PATIENT_ID_ORGANIZATION_ID;
    public static final ForeignKey<DiagnosticOrderRecord, EncounterRecord> FK_DIAGNOSTIC_ORDER_ENCOUNTER_ID = ForeignKeys0.FK_DIAGNOSTIC_ORDER_ENCOUNTER_ID;
    public static final ForeignKey<DiagnosticOrderRecord, PractitionerRecord> FK_DIAGNOSTIC_ORDER_PRACTITIONER_ID = ForeignKeys0.FK_DIAGNOSTIC_ORDER_PRACTITIONER_ID;
    public static final ForeignKey<EncounterRecord, PatientRecord> FK_ENCOUNTER_PATIENT_ID_ORGANIZATION_ID = ForeignKeys0.FK_ENCOUNTER_PATIENT_ID_ORGANIZATION_ID;
    public static final ForeignKey<EncounterRecord, PractitionerRecord> FK_ENCOUNTER_PRACTITIONER_ID = ForeignKeys0.FK_ENCOUNTER_PRACTITIONER_ID;
    public static final ForeignKey<EncounterRecord, AppointmentRecord> FK_ENCOUNTER_APPOINTMENT_ID = ForeignKeys0.FK_ENCOUNTER_APPOINTMENT_ID;
    public static final ForeignKey<EncounterRecord, EpisodeOfCareRecord> FK_ENCOUNTER_EPISODE_OF_CARE_ID = ForeignKeys0.FK_ENCOUNTER_EPISODE_OF_CARE_ID;
    public static final ForeignKey<EncounterRecord, OrganizationRecord> FK_ENCOUNTER_SERVICE_PROVIDER_ORGANIZATION_ID = ForeignKeys0.FK_ENCOUNTER_SERVICE_PROVIDER_ORGANIZATION_ID;
    public static final ForeignKey<EpisodeOfCareRecord, PatientRecord> FK_EPISODE_OF_CARE_PATIENT_ID_ORGANISATION_ID = ForeignKeys0.FK_EPISODE_OF_CARE_PATIENT_ID_ORGANISATION_ID;
    public static final ForeignKey<EpisodeOfCareRecord, PractitionerRecord> FK_EPISODE_OF_CARE_PRACTITIONER_ID = ForeignKeys0.FK_EPISODE_OF_CARE_PRACTITIONER_ID;
    public static final ForeignKey<FlagRecord, PatientRecord> FK_FLAG_PATIENT_ID_ORGANIZATION_ID = ForeignKeys0.FK_FLAG_PATIENT_ID_ORGANIZATION_ID;
    public static final ForeignKey<LocationRecord, OrganizationRecord> FK_LOCATION_ORGANISATION_ID = ForeignKeys0.FK_LOCATION_ORGANISATION_ID;
    public static final ForeignKey<MedicationOrderRecord, PatientRecord> FK_MEDICATION_ORDER_PATIENT_ID_ORGANIZATION_ID = ForeignKeys0.FK_MEDICATION_ORDER_PATIENT_ID_ORGANIZATION_ID;
    public static final ForeignKey<MedicationOrderRecord, EncounterRecord> FK_MEDICATION_ORDER_ENCOUNTER_ID = ForeignKeys0.FK_MEDICATION_ORDER_ENCOUNTER_ID;
    public static final ForeignKey<MedicationOrderRecord, PractitionerRecord> FK_MEDICATION_ORDER_PRACTITIONER_ID = ForeignKeys0.FK_MEDICATION_ORDER_PRACTITIONER_ID;
    public static final ForeignKey<MedicationStatementRecord, PatientRecord> FK_MEDICATION_STATEMENT_PATIENT_ID_ORGANIZATION_ID = ForeignKeys0.FK_MEDICATION_STATEMENT_PATIENT_ID_ORGANIZATION_ID;
    public static final ForeignKey<MedicationStatementRecord, EncounterRecord> FK_MEDICATION_STATEMENT_ENCOUNTER_ID = ForeignKeys0.FK_MEDICATION_STATEMENT_ENCOUNTER_ID;
    public static final ForeignKey<MedicationStatementRecord, PractitionerRecord> FK_MEDICATION_STATEMENT_PRACTITIONER_ID = ForeignKeys0.FK_MEDICATION_STATEMENT_PRACTITIONER_ID;
    public static final ForeignKey<ObservationRecord, PatientRecord> FK_OBSERVATION_PATIENT_ID_ORGANIZATION_ID = ForeignKeys0.FK_OBSERVATION_PATIENT_ID_ORGANIZATION_ID;
    public static final ForeignKey<ObservationRecord, EncounterRecord> FK_OBSERVATION_ENCOUNTER_ID = ForeignKeys0.FK_OBSERVATION_ENCOUNTER_ID;
    public static final ForeignKey<ObservationRecord, PractitionerRecord> FK_OBSERVATION_PRACTITIONER_ID = ForeignKeys0.FK_OBSERVATION_PRACTITIONER_ID;
    public static final ForeignKey<PatientRecord, OrganizationRecord> FK_PATIENT_ORGANIZATION_ID = ForeignKeys0.FK_PATIENT_ORGANIZATION_ID;
    public static final ForeignKey<PatientAddressRecord, PatientRecord> FK_PATIENT_ADDRESS_PATIENT_ID_ORGANIZATION_ID = ForeignKeys0.FK_PATIENT_ADDRESS_PATIENT_ID_ORGANIZATION_ID;
    public static final ForeignKey<PatientContactRecord, PatientRecord> FK_PATIENT_CONTACT_PATIENT_ID_ORGANISATION_ID = ForeignKeys0.FK_PATIENT_CONTACT_PATIENT_ID_ORGANISATION_ID;
    public static final ForeignKey<PatientUprnRecord, PatientRecord> FK_PATIENT_UPRN_PATIENT_ID_ORGANISATION_ID = ForeignKeys0.FK_PATIENT_UPRN_PATIENT_ID_ORGANISATION_ID;
    public static final ForeignKey<PractitionerRecord, OrganizationRecord> FK_PRACTITIONER_ORGANISATION_ID = ForeignKeys0.FK_PRACTITIONER_ORGANISATION_ID;
    public static final ForeignKey<ProcedureRequestRecord, PatientRecord> FK_PROCEDURE_REQUEST_PATIENT_ID_ORGANIZATION_ID = ForeignKeys0.FK_PROCEDURE_REQUEST_PATIENT_ID_ORGANIZATION_ID;
    public static final ForeignKey<ProcedureRequestRecord, PractitionerRecord> FK_PROCEDURE_REQUEST_PRACTITIONER_ID = ForeignKeys0.FK_PROCEDURE_REQUEST_PRACTITIONER_ID;
    public static final ForeignKey<ReferralRequestRecord, PatientRecord> FK_REFERRAL_REQUEST_PATIENT_ID_ORGANIZATION_ID = ForeignKeys0.FK_REFERRAL_REQUEST_PATIENT_ID_ORGANIZATION_ID;
    public static final ForeignKey<ReferralRequestRecord, EncounterRecord> FK_REFERRAL_REQUEST_ENCOUNTER_ID = ForeignKeys0.FK_REFERRAL_REQUEST_ENCOUNTER_ID;
    public static final ForeignKey<ReferralRequestRecord, PractitionerRecord> FK_REFERRAL_REQUEST_PRACTITIONER_ID = ForeignKeys0.FK_REFERRAL_REQUEST_PRACTITIONER_ID;
    public static final ForeignKey<ReferralRequestRecord, OrganizationRecord> FK_REFERRAL_REQUEST_REQUESTER_ORGANIZATION_ID = ForeignKeys0.FK_REFERRAL_REQUEST_REQUESTER_ORGANIZATION_ID;
    public static final ForeignKey<ReferralRequestRecord, OrganizationRecord> FK_REFERRAL_REQUEST_RECIPIENT_ORGANIZATION_ID = ForeignKeys0.FK_REFERRAL_REQUEST_RECIPIENT_ORGANIZATION_ID;
    public static final ForeignKey<ScheduleRecord, OrganizationRecord> FK_SCHEDULE_ORGANIZATION_ID = ForeignKeys0.FK_SCHEDULE_ORGANIZATION_ID;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<ConceptRecord, Integer> IDENTITY_CONCEPT = Internal.createIdentity(Concept.CONCEPT, Concept.CONCEPT.DBID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AllergyIntoleranceRecord> KEY_ALLERGY_INTOLERANCE_PRIMARY = Internal.createUniqueKey(AllergyIntolerance.ALLERGY_INTOLERANCE, "KEY_allergy_intolerance_PRIMARY", AllergyIntolerance.ALLERGY_INTOLERANCE.ORGANIZATION_ID, AllergyIntolerance.ALLERGY_INTOLERANCE.PERSON_ID, AllergyIntolerance.ALLERGY_INTOLERANCE.ID);
        public static final UniqueKey<AllergyIntoleranceRecord> KEY_ALLERGY_INTOLERANCE_ALLERGY_INTOLERANCE_ID = Internal.createUniqueKey(AllergyIntolerance.ALLERGY_INTOLERANCE, "KEY_allergy_intolerance_allergy_intolerance_id", AllergyIntolerance.ALLERGY_INTOLERANCE.ID);
        public static final UniqueKey<AppointmentRecord> KEY_APPOINTMENT_PRIMARY = Internal.createUniqueKey(Appointment.APPOINTMENT, "KEY_appointment_PRIMARY", Appointment.APPOINTMENT.ORGANIZATION_ID, Appointment.APPOINTMENT.PERSON_ID, Appointment.APPOINTMENT.ID);
        public static final UniqueKey<AppointmentRecord> KEY_APPOINTMENT_APPOINTMENT_ID = Internal.createUniqueKey(Appointment.APPOINTMENT, "KEY_appointment_appointment_id", Appointment.APPOINTMENT.ID);
        public static final UniqueKey<ConceptRecord> KEY_CONCEPT_PRIMARY = Internal.createUniqueKey(Concept.CONCEPT, "KEY_concept_PRIMARY", Concept.CONCEPT.DBID);
        public static final UniqueKey<ConceptRecord> KEY_CONCEPT_CONCEPT_ID_UQ = Internal.createUniqueKey(Concept.CONCEPT, "KEY_concept_concept_id_uq", Concept.CONCEPT.ID);
        public static final UniqueKey<ConceptRecord> KEY_CONCEPT_CONCEPT_SCHEME_CODE_IDX = Internal.createUniqueKey(Concept.CONCEPT, "KEY_concept_concept_scheme_code_idx", Concept.CONCEPT.SCHEME, Concept.CONCEPT.CODE);
        public static final UniqueKey<ConceptMapRecord> KEY_CONCEPT_MAP_PRIMARY = Internal.createUniqueKey(ConceptMap.CONCEPT_MAP, "KEY_concept_map_PRIMARY", ConceptMap.CONCEPT_MAP.LEGACY);
        public static final UniqueKey<DiagnosticOrderRecord> KEY_DIAGNOSTIC_ORDER_PRIMARY = Internal.createUniqueKey(DiagnosticOrder.DIAGNOSTIC_ORDER, "KEY_diagnostic_order_PRIMARY", DiagnosticOrder.DIAGNOSTIC_ORDER.ORGANIZATION_ID, DiagnosticOrder.DIAGNOSTIC_ORDER.PERSON_ID, DiagnosticOrder.DIAGNOSTIC_ORDER.ID);
        public static final UniqueKey<DiagnosticOrderRecord> KEY_DIAGNOSTIC_ORDER_DIAGNOSTIC_ORDER_ID = Internal.createUniqueKey(DiagnosticOrder.DIAGNOSTIC_ORDER, "KEY_diagnostic_order_diagnostic_order_id", DiagnosticOrder.DIAGNOSTIC_ORDER.ID);
        public static final UniqueKey<EncounterRecord> KEY_ENCOUNTER_PRIMARY = Internal.createUniqueKey(Encounter.ENCOUNTER, "KEY_encounter_PRIMARY", Encounter.ENCOUNTER.ORGANIZATION_ID, Encounter.ENCOUNTER.PERSON_ID, Encounter.ENCOUNTER.ID);
        public static final UniqueKey<EncounterRecord> KEY_ENCOUNTER_ENCOUNTER_ID = Internal.createUniqueKey(Encounter.ENCOUNTER, "KEY_encounter_encounter_id", Encounter.ENCOUNTER.ID);
        public static final UniqueKey<EpisodeOfCareRecord> KEY_EPISODE_OF_CARE_PRIMARY = Internal.createUniqueKey(EpisodeOfCare.EPISODE_OF_CARE, "KEY_episode_of_care_PRIMARY", EpisodeOfCare.EPISODE_OF_CARE.ORGANIZATION_ID, EpisodeOfCare.EPISODE_OF_CARE.PERSON_ID, EpisodeOfCare.EPISODE_OF_CARE.ID);
        public static final UniqueKey<EpisodeOfCareRecord> KEY_EPISODE_OF_CARE_EPISODE_OF_CARE_ID = Internal.createUniqueKey(EpisodeOfCare.EPISODE_OF_CARE, "KEY_episode_of_care_episode_of_care_id", EpisodeOfCare.EPISODE_OF_CARE.ID);
        public static final UniqueKey<FlagRecord> KEY_FLAG_PRIMARY = Internal.createUniqueKey(Flag.FLAG, "KEY_flag_PRIMARY", Flag.FLAG.ORGANIZATION_ID, Flag.FLAG.PERSON_ID, Flag.FLAG.ID);
        public static final UniqueKey<FlagRecord> KEY_FLAG_FLAG_ID = Internal.createUniqueKey(Flag.FLAG, "KEY_flag_flag_id", Flag.FLAG.ID);
        public static final UniqueKey<LocationRecord> KEY_LOCATION_PRIMARY = Internal.createUniqueKey(Location.LOCATION, "KEY_location_PRIMARY", Location.LOCATION.ID);
        public static final UniqueKey<LocationRecord> KEY_LOCATION_LOCATION_ID = Internal.createUniqueKey(Location.LOCATION, "KEY_location_location_id", Location.LOCATION.ID);
        public static final UniqueKey<MedicationOrderRecord> KEY_MEDICATION_ORDER_PRIMARY = Internal.createUniqueKey(MedicationOrder.MEDICATION_ORDER, "KEY_medication_order_PRIMARY", MedicationOrder.MEDICATION_ORDER.ORGANIZATION_ID, MedicationOrder.MEDICATION_ORDER.PERSON_ID, MedicationOrder.MEDICATION_ORDER.ID);
        public static final UniqueKey<MedicationOrderRecord> KEY_MEDICATION_ORDER_MEDICATION_ORDER_ID = Internal.createUniqueKey(MedicationOrder.MEDICATION_ORDER, "KEY_medication_order_medication_order_id", MedicationOrder.MEDICATION_ORDER.ID);
        public static final UniqueKey<MedicationStatementRecord> KEY_MEDICATION_STATEMENT_PRIMARY = Internal.createUniqueKey(MedicationStatement.MEDICATION_STATEMENT, "KEY_medication_statement_PRIMARY", MedicationStatement.MEDICATION_STATEMENT.ORGANIZATION_ID, MedicationStatement.MEDICATION_STATEMENT.PERSON_ID, MedicationStatement.MEDICATION_STATEMENT.ID);
        public static final UniqueKey<MedicationStatementRecord> KEY_MEDICATION_STATEMENT_MEDICATION_STATEMENT_ID = Internal.createUniqueKey(MedicationStatement.MEDICATION_STATEMENT, "KEY_medication_statement_medication_statement_id", MedicationStatement.MEDICATION_STATEMENT.ID);
        public static final UniqueKey<ObservationRecord> KEY_OBSERVATION_PRIMARY = Internal.createUniqueKey(Observation.OBSERVATION, "KEY_observation_PRIMARY", Observation.OBSERVATION.ORGANIZATION_ID, Observation.OBSERVATION.PERSON_ID, Observation.OBSERVATION.ID);
        public static final UniqueKey<ObservationRecord> KEY_OBSERVATION_OBSERVATION_ID = Internal.createUniqueKey(Observation.OBSERVATION, "KEY_observation_observation_id", Observation.OBSERVATION.ID);
        public static final UniqueKey<OrganizationRecord> KEY_ORGANIZATION_PRIMARY = Internal.createUniqueKey(Organization.ORGANIZATION, "KEY_organization_PRIMARY", Organization.ORGANIZATION.ID);
        public static final UniqueKey<OrganizationRecord> KEY_ORGANIZATION_ORGANIZATION_ID = Internal.createUniqueKey(Organization.ORGANIZATION, "KEY_organization_organization_id", Organization.ORGANIZATION.ID);
        public static final UniqueKey<PatientRecord> KEY_PATIENT_PRIMARY = Internal.createUniqueKey(Patient.PATIENT, "KEY_patient_PRIMARY", Patient.PATIENT.ORGANIZATION_ID, Patient.PATIENT.PERSON_ID, Patient.PATIENT.ID);
        public static final UniqueKey<PatientRecord> KEY_PATIENT_PATIENT_ID = Internal.createUniqueKey(Patient.PATIENT, "KEY_patient_patient_id", Patient.PATIENT.ID);
        public static final UniqueKey<PatientAddressRecord> KEY_PATIENT_ADDRESS_PRIMARY = Internal.createUniqueKey(PatientAddress.PATIENT_ADDRESS, "KEY_patient_address_PRIMARY", PatientAddress.PATIENT_ADDRESS.ORGANIZATION_ID, PatientAddress.PATIENT_ADDRESS.ID, PatientAddress.PATIENT_ADDRESS.PATIENT_ID, PatientAddress.PATIENT_ADDRESS.PERSON_ID);
        public static final UniqueKey<PatientContactRecord> KEY_PATIENT_CONTACT_PRIMARY = Internal.createUniqueKey(PatientContact.PATIENT_CONTACT, "KEY_patient_contact_PRIMARY", PatientContact.PATIENT_CONTACT.ORGANIZATION_ID, PatientContact.PATIENT_CONTACT.ID, PatientContact.PATIENT_CONTACT.PATIENT_ID, PatientContact.PATIENT_CONTACT.PERSON_ID);
        public static final UniqueKey<PatientUprnRecord> KEY_PATIENT_UPRN_PRIMARY = Internal.createUniqueKey(PatientUprn.PATIENT_UPRN, "KEY_patient_uprn_PRIMARY", PatientUprn.PATIENT_UPRN.ORGANIZATION_ID, PatientUprn.PATIENT_UPRN.PERSON_ID, PatientUprn.PATIENT_UPRN.PATIENT_ID);
        public static final UniqueKey<PatientUprnRecord> KEY_PATIENT_UPRN_PATIENT_UPRN_ID = Internal.createUniqueKey(PatientUprn.PATIENT_UPRN, "KEY_patient_uprn_patient_uprn_id", PatientUprn.PATIENT_UPRN.PATIENT_ID);
        public static final UniqueKey<PersonRecord> KEY_PERSON_PRIMARY = Internal.createUniqueKey(Person.PERSON, "KEY_person_PRIMARY", Person.PERSON.ID);
        public static final UniqueKey<PersonRecord> KEY_PERSON_PERSON_ID = Internal.createUniqueKey(Person.PERSON, "KEY_person_person_id", Person.PERSON.ID);
        public static final UniqueKey<PractitionerRecord> KEY_PRACTITIONER_PRIMARY = Internal.createUniqueKey(Practitioner.PRACTITIONER, "KEY_practitioner_PRIMARY", Practitioner.PRACTITIONER.ID);
        public static final UniqueKey<PractitionerRecord> KEY_PRACTITIONER_PRACTITIONER_ID = Internal.createUniqueKey(Practitioner.PRACTITIONER, "KEY_practitioner_practitioner_id", Practitioner.PRACTITIONER.ID);
        public static final UniqueKey<ProcedureRequestRecord> KEY_PROCEDURE_REQUEST_PRIMARY = Internal.createUniqueKey(ProcedureRequest.PROCEDURE_REQUEST, "KEY_procedure_request_PRIMARY", ProcedureRequest.PROCEDURE_REQUEST.ORGANIZATION_ID, ProcedureRequest.PROCEDURE_REQUEST.PERSON_ID, ProcedureRequest.PROCEDURE_REQUEST.ID);
        public static final UniqueKey<ProcedureRequestRecord> KEY_PROCEDURE_REQUEST_PROCEDURE_REQUEST_ID = Internal.createUniqueKey(ProcedureRequest.PROCEDURE_REQUEST, "KEY_procedure_request_procedure_request_id", ProcedureRequest.PROCEDURE_REQUEST.ID);
        public static final UniqueKey<PseudoIdRecord> KEY_PSEUDO_ID_PSEUDO_ID_ID = Internal.createUniqueKey(PseudoId.PSEUDO_ID, "KEY_pseudo_id_pseudo_id_id", PseudoId.PSEUDO_ID.ID);
        public static final UniqueKey<PseudoIdRecord> KEY_PSEUDO_ID_PRIMARY = Internal.createUniqueKey(PseudoId.PSEUDO_ID, "KEY_pseudo_id_PRIMARY", PseudoId.PSEUDO_ID.PATIENT_ID, PseudoId.PSEUDO_ID.SALT_KEY_NAME);
        public static final UniqueKey<ReferralRequestRecord> KEY_REFERRAL_REQUEST_PRIMARY = Internal.createUniqueKey(ReferralRequest.REFERRAL_REQUEST, "KEY_referral_request_PRIMARY", ReferralRequest.REFERRAL_REQUEST.ORGANIZATION_ID, ReferralRequest.REFERRAL_REQUEST.PERSON_ID, ReferralRequest.REFERRAL_REQUEST.ID);
        public static final UniqueKey<ReferralRequestRecord> KEY_REFERRAL_REQUEST_REFERRAL_REQUEST_ID = Internal.createUniqueKey(ReferralRequest.REFERRAL_REQUEST, "KEY_referral_request_referral_request_id", ReferralRequest.REFERRAL_REQUEST.ID);
        public static final UniqueKey<ScheduleRecord> KEY_SCHEDULE_PRIMARY = Internal.createUniqueKey(Schedule.SCHEDULE, "KEY_schedule_PRIMARY", Schedule.SCHEDULE.ORGANIZATION_ID, Schedule.SCHEDULE.ID);
        public static final UniqueKey<ScheduleRecord> KEY_SCHEDULE_SCHEDULE_ID = Internal.createUniqueKey(Schedule.SCHEDULE, "KEY_schedule_schedule_id", Schedule.SCHEDULE.ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<AllergyIntoleranceRecord, PatientRecord> FK_ALLERGY_INTOLERANCE_PATIENT_ID_ORGANIZATION_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_PATIENT_PATIENT_ID, AllergyIntolerance.ALLERGY_INTOLERANCE, "fk_allergy_intolerance_patient_id_organization_id", AllergyIntolerance.ALLERGY_INTOLERANCE.PATIENT_ID, AllergyIntolerance.ALLERGY_INTOLERANCE.ORGANIZATION_ID);
        public static final ForeignKey<AllergyIntoleranceRecord, EncounterRecord> FK_ALLERGY_INTOLERANCE_ENCOUNTER_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_ENCOUNTER_ENCOUNTER_ID, AllergyIntolerance.ALLERGY_INTOLERANCE, "fk_allergy_intolerance_encounter_id", AllergyIntolerance.ALLERGY_INTOLERANCE.ENCOUNTER_ID);
        public static final ForeignKey<AllergyIntoleranceRecord, PractitionerRecord> FK_ALLERGY_INTOLERANCE_PRACTITIONER_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_PRACTITIONER_PRIMARY, AllergyIntolerance.ALLERGY_INTOLERANCE, "fk_allergy_intolerance_practitioner_id", AllergyIntolerance.ALLERGY_INTOLERANCE.PRACTITIONER_ID);
        public static final ForeignKey<AppointmentRecord, OrganizationRecord> FK_APPOINTMENT_ORGANIZATION_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_ORGANIZATION_PRIMARY, Appointment.APPOINTMENT, "fk_appointment_organization_id", Appointment.APPOINTMENT.ORGANIZATION_ID);
        public static final ForeignKey<AppointmentRecord, PractitionerRecord> FK_APPOINTMENT_PRACTITIONER_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_PRACTITIONER_PRIMARY, Appointment.APPOINTMENT, "fk_appointment_practitioner_id", Appointment.APPOINTMENT.PRACTITIONER_ID);
        public static final ForeignKey<DiagnosticOrderRecord, PatientRecord> FK_DIAGNOSTIC_ORDER_PATIENT_ID_ORGANIZATION_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_PATIENT_PATIENT_ID, DiagnosticOrder.DIAGNOSTIC_ORDER, "fk_diagnostic_order_patient_id_organization_id", DiagnosticOrder.DIAGNOSTIC_ORDER.PATIENT_ID, DiagnosticOrder.DIAGNOSTIC_ORDER.ORGANIZATION_ID);
        public static final ForeignKey<DiagnosticOrderRecord, EncounterRecord> FK_DIAGNOSTIC_ORDER_ENCOUNTER_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_ENCOUNTER_ENCOUNTER_ID, DiagnosticOrder.DIAGNOSTIC_ORDER, "fk_diagnostic_order_encounter_id", DiagnosticOrder.DIAGNOSTIC_ORDER.ENCOUNTER_ID);
        public static final ForeignKey<DiagnosticOrderRecord, PractitionerRecord> FK_DIAGNOSTIC_ORDER_PRACTITIONER_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_PRACTITIONER_PRIMARY, DiagnosticOrder.DIAGNOSTIC_ORDER, "fk_diagnostic_order_practitioner_id", DiagnosticOrder.DIAGNOSTIC_ORDER.PRACTITIONER_ID);
        public static final ForeignKey<EncounterRecord, PatientRecord> FK_ENCOUNTER_PATIENT_ID_ORGANIZATION_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_PATIENT_PATIENT_ID, Encounter.ENCOUNTER, "fk_encounter_patient_id_organization_id", Encounter.ENCOUNTER.PATIENT_ID, Encounter.ENCOUNTER.ORGANIZATION_ID);
        public static final ForeignKey<EncounterRecord, PractitionerRecord> FK_ENCOUNTER_PRACTITIONER_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_PRACTITIONER_PRIMARY, Encounter.ENCOUNTER, "fk_encounter_practitioner_id", Encounter.ENCOUNTER.PRACTITIONER_ID);
        public static final ForeignKey<EncounterRecord, AppointmentRecord> FK_ENCOUNTER_APPOINTMENT_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_APPOINTMENT_APPOINTMENT_ID, Encounter.ENCOUNTER, "fk_encounter_appointment_id", Encounter.ENCOUNTER.APPOINTMENT_ID);
        public static final ForeignKey<EncounterRecord, EpisodeOfCareRecord> FK_ENCOUNTER_EPISODE_OF_CARE_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_EPISODE_OF_CARE_EPISODE_OF_CARE_ID, Encounter.ENCOUNTER, "fk_encounter_episode_of_care_id", Encounter.ENCOUNTER.EPISODE_OF_CARE_ID);
        public static final ForeignKey<EncounterRecord, OrganizationRecord> FK_ENCOUNTER_SERVICE_PROVIDER_ORGANIZATION_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_ORGANIZATION_PRIMARY, Encounter.ENCOUNTER, "fk_encounter_service_provider_organization_id", Encounter.ENCOUNTER.SERVICE_PROVIDER_ORGANIZATION_ID);
        public static final ForeignKey<EpisodeOfCareRecord, PatientRecord> FK_EPISODE_OF_CARE_PATIENT_ID_ORGANISATION_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_PATIENT_PATIENT_ID, EpisodeOfCare.EPISODE_OF_CARE, "fk_episode_of_care_patient_id_organisation_id", EpisodeOfCare.EPISODE_OF_CARE.PATIENT_ID, EpisodeOfCare.EPISODE_OF_CARE.ORGANIZATION_ID);
        public static final ForeignKey<EpisodeOfCareRecord, PractitionerRecord> FK_EPISODE_OF_CARE_PRACTITIONER_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_PRACTITIONER_PRIMARY, EpisodeOfCare.EPISODE_OF_CARE, "fk_episode_of_care_practitioner_id", EpisodeOfCare.EPISODE_OF_CARE.USUAL_GP_PRACTITIONER_ID);
        public static final ForeignKey<FlagRecord, PatientRecord> FK_FLAG_PATIENT_ID_ORGANIZATION_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_PATIENT_PATIENT_ID, Flag.FLAG, "fk_flag_patient_id_organization_id", Flag.FLAG.PATIENT_ID, Flag.FLAG.ORGANIZATION_ID);
        public static final ForeignKey<LocationRecord, OrganizationRecord> FK_LOCATION_ORGANISATION_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_ORGANIZATION_PRIMARY, Location.LOCATION, "fk_location_organisation_id", Location.LOCATION.MANAGING_ORGANIZATION_ID);
        public static final ForeignKey<MedicationOrderRecord, PatientRecord> FK_MEDICATION_ORDER_PATIENT_ID_ORGANIZATION_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_PATIENT_PATIENT_ID, MedicationOrder.MEDICATION_ORDER, "fk_medication_order_patient_id_organization_id", MedicationOrder.MEDICATION_ORDER.PATIENT_ID, MedicationOrder.MEDICATION_ORDER.ORGANIZATION_ID);
        public static final ForeignKey<MedicationOrderRecord, EncounterRecord> FK_MEDICATION_ORDER_ENCOUNTER_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_ENCOUNTER_ENCOUNTER_ID, MedicationOrder.MEDICATION_ORDER, "fk_medication_order_encounter_id", MedicationOrder.MEDICATION_ORDER.ENCOUNTER_ID);
        public static final ForeignKey<MedicationOrderRecord, PractitionerRecord> FK_MEDICATION_ORDER_PRACTITIONER_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_PRACTITIONER_PRIMARY, MedicationOrder.MEDICATION_ORDER, "fk_medication_order_practitioner_id", MedicationOrder.MEDICATION_ORDER.PRACTITIONER_ID);
        public static final ForeignKey<MedicationStatementRecord, PatientRecord> FK_MEDICATION_STATEMENT_PATIENT_ID_ORGANIZATION_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_PATIENT_PATIENT_ID, MedicationStatement.MEDICATION_STATEMENT, "fk_medication_statement_patient_id_organization_id", MedicationStatement.MEDICATION_STATEMENT.PATIENT_ID, MedicationStatement.MEDICATION_STATEMENT.ORGANIZATION_ID);
        public static final ForeignKey<MedicationStatementRecord, EncounterRecord> FK_MEDICATION_STATEMENT_ENCOUNTER_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_ENCOUNTER_ENCOUNTER_ID, MedicationStatement.MEDICATION_STATEMENT, "fk_medication_statement_encounter_id", MedicationStatement.MEDICATION_STATEMENT.ENCOUNTER_ID);
        public static final ForeignKey<MedicationStatementRecord, PractitionerRecord> FK_MEDICATION_STATEMENT_PRACTITIONER_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_PRACTITIONER_PRIMARY, MedicationStatement.MEDICATION_STATEMENT, "fk_medication_statement_practitioner_id", MedicationStatement.MEDICATION_STATEMENT.PRACTITIONER_ID);
        public static final ForeignKey<ObservationRecord, PatientRecord> FK_OBSERVATION_PATIENT_ID_ORGANIZATION_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_PATIENT_PATIENT_ID, Observation.OBSERVATION, "fk_observation_patient_id_organization_id", Observation.OBSERVATION.PATIENT_ID, Observation.OBSERVATION.ORGANIZATION_ID);
        public static final ForeignKey<ObservationRecord, EncounterRecord> FK_OBSERVATION_ENCOUNTER_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_ENCOUNTER_ENCOUNTER_ID, Observation.OBSERVATION, "fk_observation_encounter_id", Observation.OBSERVATION.ENCOUNTER_ID);
        public static final ForeignKey<ObservationRecord, PractitionerRecord> FK_OBSERVATION_PRACTITIONER_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_PRACTITIONER_PRIMARY, Observation.OBSERVATION, "fk_observation_practitioner_id", Observation.OBSERVATION.PRACTITIONER_ID);
        public static final ForeignKey<PatientRecord, OrganizationRecord> FK_PATIENT_ORGANIZATION_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_ORGANIZATION_PRIMARY, Patient.PATIENT, "fk_patient_organization_id", Patient.PATIENT.ORGANIZATION_ID);
        public static final ForeignKey<PatientAddressRecord, PatientRecord> FK_PATIENT_ADDRESS_PATIENT_ID_ORGANIZATION_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_PATIENT_PATIENT_ID, PatientAddress.PATIENT_ADDRESS, "fk_patient_address_patient_id_organization_id", PatientAddress.PATIENT_ADDRESS.PATIENT_ID, PatientAddress.PATIENT_ADDRESS.ORGANIZATION_ID);
        public static final ForeignKey<PatientContactRecord, PatientRecord> FK_PATIENT_CONTACT_PATIENT_ID_ORGANISATION_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_PATIENT_PATIENT_ID, PatientContact.PATIENT_CONTACT, "fk_patient_contact_patient_id_organisation_id", PatientContact.PATIENT_CONTACT.PATIENT_ID, PatientContact.PATIENT_CONTACT.ORGANIZATION_ID);
        public static final ForeignKey<PatientUprnRecord, PatientRecord> FK_PATIENT_UPRN_PATIENT_ID_ORGANISATION_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_PATIENT_PATIENT_ID, PatientUprn.PATIENT_UPRN, "fk_patient_uprn_patient_id_organisation_id", PatientUprn.PATIENT_UPRN.PATIENT_ID, PatientUprn.PATIENT_UPRN.ORGANIZATION_ID);
        public static final ForeignKey<PractitionerRecord, OrganizationRecord> FK_PRACTITIONER_ORGANISATION_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_ORGANIZATION_PRIMARY, Practitioner.PRACTITIONER, "fk_practitioner_organisation_id", Practitioner.PRACTITIONER.ORGANIZATION_ID);
        public static final ForeignKey<ProcedureRequestRecord, PatientRecord> FK_PROCEDURE_REQUEST_PATIENT_ID_ORGANIZATION_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_PATIENT_PATIENT_ID, ProcedureRequest.PROCEDURE_REQUEST, "fk_procedure_request_patient_id_organization_id", ProcedureRequest.PROCEDURE_REQUEST.PATIENT_ID, ProcedureRequest.PROCEDURE_REQUEST.ORGANIZATION_ID);
        public static final ForeignKey<ProcedureRequestRecord, PractitionerRecord> FK_PROCEDURE_REQUEST_PRACTITIONER_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_PRACTITIONER_PRIMARY, ProcedureRequest.PROCEDURE_REQUEST, "fk_procedure_request_practitioner_id", ProcedureRequest.PROCEDURE_REQUEST.PRACTITIONER_ID);
        public static final ForeignKey<ReferralRequestRecord, PatientRecord> FK_REFERRAL_REQUEST_PATIENT_ID_ORGANIZATION_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_PATIENT_PATIENT_ID, ReferralRequest.REFERRAL_REQUEST, "fk_referral_request_patient_id_organization_id", ReferralRequest.REFERRAL_REQUEST.PATIENT_ID, ReferralRequest.REFERRAL_REQUEST.ORGANIZATION_ID);
        public static final ForeignKey<ReferralRequestRecord, EncounterRecord> FK_REFERRAL_REQUEST_ENCOUNTER_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_ENCOUNTER_ENCOUNTER_ID, ReferralRequest.REFERRAL_REQUEST, "fk_referral_request_encounter_id", ReferralRequest.REFERRAL_REQUEST.ENCOUNTER_ID);
        public static final ForeignKey<ReferralRequestRecord, PractitionerRecord> FK_REFERRAL_REQUEST_PRACTITIONER_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_PRACTITIONER_PRIMARY, ReferralRequest.REFERRAL_REQUEST, "fk_referral_request_practitioner_id", ReferralRequest.REFERRAL_REQUEST.PRACTITIONER_ID);
        public static final ForeignKey<ReferralRequestRecord, OrganizationRecord> FK_REFERRAL_REQUEST_REQUESTER_ORGANIZATION_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_ORGANIZATION_PRIMARY, ReferralRequest.REFERRAL_REQUEST, "fk_referral_request_requester_organization_id", ReferralRequest.REFERRAL_REQUEST.REQUESTER_ORGANIZATION_ID);
        public static final ForeignKey<ReferralRequestRecord, OrganizationRecord> FK_REFERRAL_REQUEST_RECIPIENT_ORGANIZATION_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_ORGANIZATION_PRIMARY, ReferralRequest.REFERRAL_REQUEST, "fk_referral_request_recipient_organization_id", ReferralRequest.REFERRAL_REQUEST.RECIPIENT_ORGANIZATION_ID);
        public static final ForeignKey<ScheduleRecord, OrganizationRecord> FK_SCHEDULE_ORGANIZATION_ID = Internal.createForeignKey(org.endeavour.queryengine.db.Keys.KEY_ORGANIZATION_PRIMARY, Schedule.SCHEDULE, "fk_schedule_organization_id", Schedule.SCHEDULE.ORGANIZATION_ID);
    }
}
